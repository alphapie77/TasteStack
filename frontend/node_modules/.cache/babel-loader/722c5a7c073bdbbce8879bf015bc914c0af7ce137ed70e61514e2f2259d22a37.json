{"ast":null,"code":"// Base API configuration\nconst API_BASE_URL = 'http://localhost:8000/api';\n\n// Helper function to get auth headers\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  console.log('Token from localStorage:', token); // Debugging\n  return token ? {\n    'Authorization': `Bearer ${token}`\n  } : {};\n};\n\n// Generic API request function\nconst apiRequest = async (endpoint, options = {}, isFormData = false) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n\n  // Get auth headers\n  const authHeaders = getAuthHeaders();\n\n  // Set default headers\n  let headers = {\n    ...authHeaders,\n    ...options.headers\n  };\n  console.log('Headers being sent:', headers); // Debugging\n  console.log('Endpoint:', endpoint); // Debugging\n  console.log('Options:', options); // Debugging\n  console.log('isFormData:', isFormData); // Debugging\n\n  // Only set Content-Type to application/json if it's not a FormData request\n  if (!isFormData) {\n    headers['Content-Type'] = 'application/json';\n  } else {\n    console.log('FormData request - not setting Content-Type header'); // Debugging\n  }\n  const config = {\n    headers,\n    ...options\n  };\n  console.log('Final config:', config); // Debugging\n\n  try {\n    const response = await fetch(url, config);\n    console.log('Response status:', response.status); // Debugging\n    console.log('Response headers:', response.headers); // Debugging\n\n    // Handle 401 Unauthorized\n    if (response.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n      throw new Error('Unauthorized');\n    }\n\n    // Handle non-OK responses\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      console.log('Error data:', errorData); // Debugging\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\n    }\n\n    // Return JSON for non-204 responses\n    if (response.status === 204) {\n      return null;\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(`API request failed: ${error.message}`);\n    throw error;\n  }\n};\nexport default apiRequest;","map":{"version":3,"names":["API_BASE_URL","getAuthHeaders","token","localStorage","getItem","console","log","apiRequest","endpoint","options","isFormData","url","authHeaders","headers","config","response","fetch","status","removeItem","window","location","href","Error","ok","errorData","json","catch","detail","error","message"],"sources":["c:/Users/acer/Downloads/New folder/src/services/api.js"],"sourcesContent":["// Base API configuration\r\nconst API_BASE_URL = 'http://localhost:8000/api';\r\n\r\n// Helper function to get auth headers\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  console.log('Token from localStorage:', token); // Debugging\r\n  return token ? { 'Authorization': `Bearer ${token}` } : {};\r\n};\r\n\r\n// Generic API request function\r\nconst apiRequest = async (endpoint, options = {}, isFormData = false) => {\r\n  const url = `${API_BASE_URL}${endpoint}`;\r\n  \r\n  // Get auth headers\r\n  const authHeaders = getAuthHeaders();\r\n  \r\n  // Set default headers\r\n  let headers = {\r\n    ...authHeaders,\r\n    ...options.headers\r\n  };\r\n  \r\n  console.log('Headers being sent:', headers); // Debugging\r\n  console.log('Endpoint:', endpoint); // Debugging\r\n  console.log('Options:', options); // Debugging\r\n  console.log('isFormData:', isFormData); // Debugging\r\n  \r\n  // Only set Content-Type to application/json if it's not a FormData request\r\n  if (!isFormData) {\r\n    headers['Content-Type'] = 'application/json';\r\n  } else {\r\n    console.log('FormData request - not setting Content-Type header'); // Debugging\r\n  }\r\n  \r\n  const config = {\r\n    headers,\r\n    ...options\r\n  };\r\n  \r\n  console.log('Final config:', config); // Debugging\r\n\r\n  try {\r\n    const response = await fetch(url, config);\r\n    \r\n    console.log('Response status:', response.status); // Debugging\r\n    console.log('Response headers:', response.headers); // Debugging\r\n    \r\n    // Handle 401 Unauthorized\r\n    if (response.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n      throw new Error('Unauthorized');\r\n    }\r\n    \r\n    // Handle non-OK responses\r\n    if (!response.ok) {\r\n      const errorData = await response.json().catch(() => ({}));\r\n      console.log('Error data:', errorData); // Debugging\r\n      throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);\r\n    }\r\n    \r\n    // Return JSON for non-204 responses\r\n    if (response.status === 204) {\r\n      return null;\r\n    }\r\n    \r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(`API request failed: ${error.message}`);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default apiRequest;\r\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAChD,OAAOA,KAAK,GAAG;IAAE,eAAe,EAAE,UAAUA,KAAK;EAAG,CAAC,GAAG,CAAC,CAAC;AAC5D,CAAC;;AAED;AACA,MAAMK,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAEC,UAAU,GAAG,KAAK,KAAK;EACvE,MAAMC,GAAG,GAAG,GAAGX,YAAY,GAAGQ,QAAQ,EAAE;;EAExC;EACA,MAAMI,WAAW,GAAGX,cAAc,CAAC,CAAC;;EAEpC;EACA,IAAIY,OAAO,GAAG;IACZ,GAAGD,WAAW;IACd,GAAGH,OAAO,CAACI;EACb,CAAC;EAEDR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEO,OAAO,CAAC,CAAC,CAAC;EAC7CR,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEE,QAAQ,CAAC,CAAC,CAAC;EACpCH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEG,OAAO,CAAC,CAAC,CAAC;EAClCJ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEI,UAAU,CAAC,CAAC,CAAC;;EAExC;EACA,IAAI,CAACA,UAAU,EAAE;IACfG,OAAO,CAAC,cAAc,CAAC,GAAG,kBAAkB;EAC9C,CAAC,MAAM;IACLR,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC,CAAC,CAAC;EACrE;EAEA,MAAMQ,MAAM,GAAG;IACbD,OAAO;IACP,GAAGJ;EACL,CAAC;EAEDJ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEQ,MAAM,CAAC,CAAC,CAAC;;EAEtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAEG,MAAM,CAAC;IAEzCT,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAES,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC;IAClDZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAES,QAAQ,CAACF,OAAO,CAAC,CAAC,CAAC;;IAEpD;IACA,IAAIE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3Bd,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;;IAEA;IACA,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;MACzDrB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEkB,SAAS,CAAC,CAAC,CAAC;MACvC,MAAM,IAAIF,KAAK,CAACE,SAAS,CAACG,MAAM,IAAI,uBAAuBZ,QAAQ,CAACE,MAAM,EAAE,CAAC;IAC/E;;IAEA;IACA,IAAIF,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAO,IAAI;IACb;IAEA,OAAO,MAAMF,QAAQ,CAACU,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdvB,OAAO,CAACuB,KAAK,CAAC,uBAAuBA,KAAK,CAACC,OAAO,EAAE,CAAC;IACrD,MAAMD,KAAK;EACb;AACF,CAAC;AAED,eAAerB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}